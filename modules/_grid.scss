@mixin responsive-grid($class-root, $abbr, $property, $grid-splits) {
	@each $split in $grid-splits {
		$proportion: 100% / $split;
		.#{$abbr}-#{$class-root}-#{$split} {
			@content;
			#{$property}: $proportion;
		}
		$offset-property: if($property == width, margin-left, margin-top);
		@for $multiple from 1 to $split {
			$offset-prefix: if($multiple == 1, offset, offset-#{$multiple});
			.#{$offset-prefix}-#{$abbr}-#{$class-root}-#{$split} {
				#{$offset-property}: $proportion * $multiple;
			}
		}
		@if $split > 2 {
			@for $multiple from 2 to $split {
				.#{$abbr}-#{$multiple}-#{$class-root}-#{$split} {
					@content;
					#{$property}: $proportion * $multiple;
				}
			}
		}
	}
}
@mixin responsive-clear($class-root, $abbr, $abbrs) {
	$display-class: '#{$abbr}-#{$class-root}';

	@each $this-abbr in $abbrs {
		@if $this-abbr != $abbr {
			$other-abbr: '#{$this-abbr}-#{$class-root}';
			.row > .#{$other-abbr} {
				clear: none;
				&.#{$display-class} {
					clear: left;
				}
			}
		}
	}
	.row > .#{$display-class} {
		clear: left;
	}
}
@mixin responsive-display($class-root, $abbr, $abbrs) {
	@each $this-abbr in $abbrs {
		@if $this-abbr != $abbr {
			.#{$class-root}-#{$this-abbr} {
				display: none;

				&.clear-badge {
					display: none;
				}
			}
			li.#{$class-root}-#{$this-abbr} {
				display: none;
			}
		}
	}
	// put abbreviate we are interested in showing at the end
	// so that it is the last one picked up if multiple
	$display-class: #{$class-root}-#{$abbr};
	.#{$display-class} {
		display: initial;

		&.clear-badge {
			display: inline-block;
		}
	}
	li.#{$display-class} {
		display: list-item;
	}
}
@mixin spacing-tweaks($property, $name-root, $scaling-options: $spacing-scaling) {
	@each $scaling, $scaling-abbr in $scaling-options {
	    @if ($scaling == 1) {
	        .#{$name-root}-all {
	        	@extend %border-box;
	            #{$property}: $padding;
	        }
	    }
	    @else {
	        .#{$name-root}-all-#{$scaling-abbr} {
	        	@extend %border-box;
	            #{$property}: $padding * $scaling;
	        }
	    }
	    @each $direction, $abbr in $directions-with-abbr {
	        @if ($scaling == 1) {
	            .#{$name-root}-#{$abbr} {
	                @extend %border-box;
	                #{$property}-#{$direction}: $padding;
	            }
	        }
	        @else {
	            .#{$name-root}-#{$scaling-abbr}.#{$name-root}-#{$abbr} {
	            	@extend %border-box;
	                #{$property}-#{$direction}: $padding * $scaling;
	            }
	            .#{$name-root}-#{$abbr}-#{$scaling-abbr},
	            .#{$name-root}-#{$abbr}-#{$scaling-abbr}.#{$name-root}-#{$abbr} {
	            	@extend %border-box;
	                #{$property}-#{$direction}: $padding * $scaling;
	            }
	        }
	    }
	}
}

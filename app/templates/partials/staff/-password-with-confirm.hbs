{{#hide-show doRegister=(action (mut passwordDropdown))
    focusOnOpenSelector=".start-focus"
    onOpen=(action (mut storedUsername) (service-prop "authService" "authUser.username"))
    onClose=(service-action "dataService" "revert" staff
        (action (mut newPPassword) null)
        (action (mut newPassword) null)
        (action (mut storedUsername) null)) as |hideShow|}}
    <div class="form__group">
        <button class="button button--expand"
            type="button"
            onclick={{hideShow.actions.toggle}}>
            {{#if hideShow.isOpen}}
                Cancel updating password
                <span class="margin-l icon-up-arrow"></span>
            {{else}}
                Update password
                <span class="margin-l icon-down-arrow"></span>
            {{/if}}
        </button>
    </div>
    {{#if hideShow.isOpen}}
        {{#if (eq storedUsername (unbound staff.username))}}
            <div class="form__group">
                <span class="form__label form__label--multiline">
                    Changing your own password will require logging back in.
                </span>
            </div>
        {{/if}}
        <div class="form__group">
            <label class="form__label" for="Your Password">
                {{service-prop "authService" "authUser.name"}}'s Password
            </label>
            {{input type="password"
                allowShowPassword=true
                class="form__input start-focus"
                placeholder="Your Password"
                value=newPPassword}}
        </div>
        <div class="form__group">
            <label class="form__label" for="New Password">
                New Password for {{staff.name}}
            </label>
            {{input type="password"
                allowShowPassword=true
                class="form__input"
                placeholder="New Password"
                value=newPassword}}
        </div>
        <div class="form__group">
            <label class="form__label" for="Confirm New">
                Confirm New for {{staff.name}}
            </label>
            {{input type="password"
                allowShowPassword=true
                class="form__input"
                placeholder="Confirm New Password"
                value=staff.password}}
        </div>
        {{!-- use the hidden class instead of the handlebars if helper so that the unbound value
            can be the starting value --}}
        <div class="form__group flex flex--justify-center flex--spacing-between
            {{if (and newPPassword newPassword (eq newPassword staff.password)) "" 'hidden'}}">
            <div class="flex__item">
                <button class="btn" type="button"
                    onclick={{hideShow.actions.close}}>
                    Cancel
                </button>
            </div>
            <div class="flex__item">
                {{#if (eq storedUsername (unbound staff.username))}}
                    {{async-button classNames="btn btn-default"
                        disableWhen=(not (v-get staff "isValid"))
                        action=(service-action "validateAuthService" "checkPassword" storedUsername newPPassword
                            (service-action "dataService" "persist" staff
                                hideShow.actions.close
                                (service-action "authService" "logout")))
                        default="Update"
                        pending="Updating..."}}
                {{else}}
                    {{async-button classNames="btn btn-default"
                        disableWhen=(not (v-get staff "isValid"))
                        action=(service-action "validateAuthService" "checkPassword" storedUsername newPPassword
                            (service-action "dataService" "persist" staff
                                hideShow.actions.close))
                        default="Update"
                        pending="Updating..."}}
                {{/if}}
            </div>
        </div>
    {{/if}}
{{/hide-show}}

{{#hide-show doRegister=(action (mut codeDropdown))
    focusOnOpenSelector=".start-focus"
    onOpen=(action (mut staff.lockCode) "")
    onClose=(service-action "dataService" "revert" staff
        (action (mut newCPassword) null)) as |hideShow|}}
    <div class="form__group">
        <button class="button button--expand"
            type="button"
            onclick={{hideShow.actions.toggle}}>
            {{#if hideShow.isOpen}}
                Cancel updating lock code
                <span class="margin-l fa fa-caret-up"></span>
            {{else}}
                Update lock code
                <span class="margin-l fa fa-caret-down"></span>
            {{/if}}
        </button>
    </div>
    {{#if hideShow.isOpen}}
        <div class="form__group">
            <label class="form__label" for="Your Password">
                {{service-prop "authService" "authUser.name"}}'s Password
            </label>
            {{input type="password"
                allowShowPassword=true
                class="form__input start-focus"
                placeholder="Your Password"
                value=newCPassword}}
        </div>
        <div class="form__group">
            <label class="form__label" for="New Lock Code">
                New Lock Code for {{staff.name}}
            </label>
            {{lock-pad val=staff.lockCode
                doUpdateVal=(action (mut staff.lockCode))}}
        </div>
        {{#if (and newCPassword staff.lockCode)}}
            <div class="form__group flex flex--justify-center flex--spacing-between">
                <div class="flex__item">
                    <button class="btn" type="button"
                        onclick={{hideShow.actions.close}}>
                        Cancel
                    </button>
                </div>
                <div class="flex__item">
                    {{async-button classNames="btn btn-default"
                        disableWhen=(not (v-get staff "isValid"))
                        action=(service-action "validateAuthService"
                                "checkPassword"
                                (service-prop "authService" "authUser.username")
                                newCPassword
                            (service-action "dataService" "persist" staff hideShow.actions.close))
                        default="Update"
                        pending="Updating..."}}
                </div>
            </div>
        {{/if}}
    {{/if}}
{{/hide-show}}

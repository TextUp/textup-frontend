{{#slideout-pane
    headerProps=(hash title=(concat stateManager.owner.name ' Availability'))
    footerComponent=constants.SLIDEOUT.FOOTER.ACTIONS
    footerProps=(hash
        showFooter=(or model.isDirty authService.authUser.isDirty)
        doPrimary=(route-action "finishAvailabilitySlideout")
        disablePrimary=(or
            (not (v-get model 'isValid'))
            (not (v-get authService.authUser 'isValid')))
        primaryLabel="Update"
        primaryProgressLabel="Updating...")
    doClose=(route-action "cancelAvailabilitySlideout")
    forceKeepOpen=(or model.isSaving authService.authUser.isSaving
        model.isDirty authService.authUser.isDirty) as |slideout|}}

    <div class="form-element pad-t pad-l pad-r">
        <label for='Away Message' class='control-label'>{{stateManager.owner.name}}'s Away Message</label>
        <div class="margin-b">
            TextUp will reply with this message to texts and calls <b>received by {{stateManager.owner.name}}</b> when {{if stateManager.ownerIsTeam 'no one is' 'you are not'}} available. TextUp automatically adds an emergency disclaimer to your custom message.
        </div>
        {{#hide-away clickOutToClose=true
            focusOutClose=true
            bodyClickClose=false
            animation='slide'
            bodyClass='margin-t'
            hideTriggerOnOpen=false
            bodyFocusOnOpenSelector='textarea'}}
            {{textarea rows="3"
                autoresize=true
                class="form-control"
                maxlength=model.phone.content.awayMessageMaxLength
                remaining='top'
                value=model.phone.content.awayMessage
                validateObj=model.phone.content
                validateField='awayMessage'
                validate='bottom'}}
        {{else}}
            <div class="form-control-minimal pad-all">
                {{model.phone.content.awayMessage}}
                <b>{{model.phone.content.mandatoryEmergencyMessage}}</b>
            </div>
        {{/hide-away}}
    </div>
    <div class="row pad-l pad-r">
        <div class="xs-row-2 control-text">
            <label for="Voice Type" class='text-ellipsis'>
                Read with voice
            </label>
        </div>
        {{#multi-toggle classNames='xs-row-2'
            selectIndex=(if (eq model.phone.content.voice 'MALE') 0 1) as |toggle doRegister|}}
            {{#multi-toggle/item doRegister=doRegister
                color=constants.COLOR.LIGHT_BLUE
                onSelect=(action (mut model.phone.content.voice) 'MALE')}}
                Male
            {{/multi-toggle/item}}
            {{#multi-toggle/item doRegister=doRegister
                color=constants.COLOR.BRAND
                onSelect=(action (mut model.phone.content.voice) 'FEMALE')}}
                Female
            {{/multi-toggle/item}}
        {{/multi-toggle}}
    </div>

    <hr>

	<div class="pad-l pad-r pad-b">
        {{#if (not authService.authUser.enableNotifications)}}
            <div class="bg-color pad-all margin-b border-radius-all">
                You have turned notifications off <span class="link" {{action slideout.actions.close (route-action 'toggleSlideout' 'slideouts/account' 'main')}}>in your account settings</span>. Even if you are available, <span class="text-bold">you will not be notified</span> and <span class="text-bold">the away message will be sent</span> as if you were not available.
            </div>
        {{/if}}
        {{!-- choice of availability source only available for team phones --}}
        {{#if (and (eq model.constructor.modelName constants.MODEL.TEAM)
                (or (gt authService.authUser.teamsWithPhones.content.length 1)
                    authService.authUser.phone.content))}}
            {{multi-toggle/binary value=model.phone.content.availability.content.useStaffAvailability
                falseColor=constants.COLOR.LIGHT_BLUE
                trueColor=constants.COLOR.BRAND
                falseString='Custom availability'
                trueString='Default availability'}}
        {{/if}}
	</div>

    {{#with (if model.phone.content.availability.content.useStaffAvailability
            authService.authUser
            model.phone.content.availability.content) as |entity|}}
        {{availability-control
            entity=entity
            entityIdentityProp='constructor.modelName'
            onEntityDidChange=(action availabilitySlideoutService.onAvailabilityEntitySwitch)
            others=model.phone.content.others.content
            onTypeChange=(action (mut entity.manualSchedule))
            onManualAvailabilityChange=(action (mut entity.isAvailable))
            onScheduleAvailabilityChange=(action "replaceRange" target=entity.schedule.content)}}
    {{/with}}
{{/slideout-pane}}

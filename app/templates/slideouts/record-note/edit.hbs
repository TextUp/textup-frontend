{{#slideout-pane
    headerProps=(hash title="Edit Note")
    footerComponent=constants.SLIDEOUT.FOOTER.ACTIONS
    footerProps=(hash
        showFooter=true
        doPrimary=(route-action "finishEditNoteSlideout")
        disablePrimary=(not (v-get editingRecordNote "isValid"))
        primaryLabel=(if editingRecordNote.hasBeenDeleted "Confirm Delete" "Update")
        primaryProgressLabel=(if editingRecordNote.hasBeenDeleted "Deleting..." "Updating")
        primaryClass=(if editingRecordNote.hasBeenDeleted "btn btn-danger")
        secondaryLabel=(if editingRecordNote.hasBeenDeleted "Undo")
        doSecondary=(if editingRecordNote.hasBeenDeleted (route-action "onRestoreNote" editingRecordNote))
        showDelete=(not editingRecordNote.hasBeenDeleted)
        doMarkForDelete=(route-action "onMarkNoteForDeletion" editingRecordNote))
    direction=constants.SLIDEOUT.DIRECTION.RIGHT
    doClose=(route-action "cancelEditNoteSlideout")
    forceKeepOpen=editingRecordNote.isSaving as |slideout|}}
    {{form/record-note class="pad-t"
        recordNote=editingRecordNote
        doAddImage=(route-action "onNoteAddImage" editingRecordNote)
        doAddAudio=(route-action "onNoteAddAudio" editingRecordNote)
        doRemoveMedia=(route-action "onNoteRemoveMedia" editingRecordNote)
        doAddLocation=(route-action "onNoteAddLocation" editingRecordNote)
        doRemoveLocation=(route-action "onNoteRemoveLocation" editingRecordNote)
        onLocationError=(route-action "onLocationError")
        readOnly=(and (eq model.constructor.modelName constants.MODEL.CONTACT) (not model.allowEdits))}}
{{/slideout-pane}}

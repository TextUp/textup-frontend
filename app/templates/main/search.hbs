{{title (if searchQuery (concat 'Search ' searchQuery) 'New Search') separator=' - '}}

<div class="content">
	<div class="section-header">
		<div class="tag-title">
			{{input type="text"
				value=_searchQuery
				classNames='form-control form-control--only-bottom search-input'
				placeholder="Search here..."
				enter=(route-action "triggerSearch" _searchQuery)
				escape-press=(action (mut _searchQuery) null)}}
			<div class="margin-t-half">
				{{#if searchResults}}
					<span class="text-bold margin-r-half">
						{{numResults}}
						{{pluralize 'contact' numResults}}
					</span>
				{{/if}}
				<span>
					<a href="" {{action 'closeSearch'}}>Close search</a>
				</span>
			</div>
		</div>
		<button class="v-center-right full-height btn btn-plain"
			type='button'
			disabled={{if (not _searchQuery) 'disabled'}}
			onclick={{route-action "triggerSearch" _searchQuery}}>
			<span class="fa fa-search"></span>
		</button>
	</div>
    <div class="section-body flex flex--align-stretch flex--direction-vertical">
	{{#infinite-scroll classNames='bg-color bg-dark flex__item flex__item--grow'
        containerClass='bg-color bg-lightest'
        itemsClass='result-list'
        direction='down'
        data=searchResults
        total=numResults
        doLoad=(route-action 'loadMore')
        doRefresh=(route-action 'refresh') as |contact|}}
        {{#entity-display class="result-item"
            entityIdentifier=contact.identifier
            linkTarget='main.search.contact'
            linkParam=contact.id
            bodyClass=(if contact.isUnread 'unread')
            isSelected=contact.isSelected
            onSelect=(route-action 'toggleSelected' contact)}}
            {{entity-display/contact entity=contact}}
        {{/entity-display}}
    {{else}}
		<div class="no-results">
			{{#if searchQuery}}
				No results for the search <span class="text-bold">{{searchQuery}}</span>
			{{else}}
				Start typing a name or phone number to search through your contacts.
			{{/if}}
        </div>
    {{/infinite-scroll}}
    <div class="section-footer flex__item flex__item--no-shrink" id="task-manager__container">
        {{tour-components/task-manager
          shouldShow=tutorialService.publicAPI.shouldShowTaskManager
          doRegister=(action (mut tutorialService.taskManager))
          firstIncompleteTask=tutorialService.publicAPI.firstIncompleteTask
          onClose=tutorialService.publicAPI.actions.closeTaskManager
          getTaskStatus=tutorialService.publicAPI.actions.getTaskStatus
          onFinishCompleteTask=tutorialService.publicAPI.actions.finishCompleteTask
          resetTasks=tutorialService.publicAPI.actions.resetTasks
          tasks=tutorialService.publicAPI.tasks
        }}
    </div>
</div>
</div>
{{outlet}}

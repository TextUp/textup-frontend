{{title "Tag Details"}}

<div class="details full-height">
	<div class="section-header">
		{{record-owner-header/tag classNames="row full-height"
			tag=model
			backRouteName=(if model.isDeleted "main.contacts" "main.tag")
			linkParams=(if model.isDeleted
				(array (get (service-prop "authService" "authUser") (constant "PROP_NAME.URL_IDENT")))
				(array
					(get (service-prop "authService" "authUser") (constant "PROP_NAME.URL_IDENT"))
					(get model (constant "PROP_NAME.URL_IDENT"))))
            onEdit=(service-action "existingTagSlideoutService" "openSlideout" model)
        	onExport=(service-action "exportSlideoutService" "startSingleExportSlideout" model)}}
	</div>
	{{#if model.isDeleted}}
		<div class="section-body row">
			<div class="center">
				{{#if model.hasDirtyAttributes}}
					<p>{{model.name}} is about to be deleted.</p>
				{{else}}
					<p>{{model.name}} has been deleted.</p>
				{{/if}}
			</div>
		</div>
	{{else}}
		{{care-record classNames="section-body row"
	        canAddToRecord=(not model.isEmpty)
	        noAddToRecordMessage="Add some contacts to this tag to start messaging."
	        canModifyExistingInRecord=true
	        nextFutureFire=model.nextFutureFire
	        recordClusters=model.recordClusters
	        numRecordItems=model.numRecordItems
	        totalNumRecordItems=model.totalNumRecordItems

	        contents=careRecordText.contents
	        onContentChange=(action (mut careRecordText.contents))

	        images=careRecordText.media.content.displayedImages
	        audio=careRecordText.media.content.displayedAudio
	        onAddImage=(service-action "mediaService" "addImage" careRecordText)
		    onAddAudio=(service-action "mediaService" "addAudio" careRecordText)
		    onRemoveMedia=(service-action "mediaService" "removeMedia" careRecordText)

	        doRegister=(action (mut careRecordRef))
	        onLoadRecordItems=(action "onLoadRecordItems")
	        onRefreshRecordItems=(action "onRefreshRecordItems")

	        onText=(action "onText")

	        onAddNote=(service-action "noteSlideoutService" "openNewNoteSlideout" model)
        	onEditNote=(service-action "noteSlideoutService" "openExistingNoteSlideout" model)
	        onViewNoteHistory=(service-action "noteRevisionSlideoutService" "openSlideout")
	        onRestoreNote=(service-action "recordItemService" "restoreDeletedNote")

	        onScheduleMessage=(service-action "newFutureMessageSlideoutService" "openSlideout" model)
	        onViewScheduledMessages=(service-action "existingFutureMessageSlideoutService" "openSlideout" model)}}
	{{/if}}
</div>

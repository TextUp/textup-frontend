// Removal of query param allows fetching of this font from app cache
// rather than making a call to the server each time
@font-face {
    font-family: 'FontAwesome';
    src: url('fonts/fontawesome-webfont.eot');
    src: url('fonts/fontawesome-webfont.eot?#iefix') format('embedded-opentype'),
		url('fonts/fontawesome-webfont.woff2') format('woff2'),
		url('fonts/fontawesome-webfont.woff') format('woff'),
		url('fonts/fontawesome-webfont.ttf') format('truetype'),
		url('fonts/fontawesome-webfont.svg?#fontawesomeregular') format('svg');
    font-weight: normal;
    font-style: normal;
}

// when we want element of an animated div to overflow
// when absolute positioned, such as for slideouts
.animated-overflow {
	overflow: visible;
	z-index: $slideout-z-index;

	& > * {
		overflow: visible;
	}
}
.loading-slider > span {
    background-color: $brand-color;
}

// main menu
// ---------

.header-slideout {
	position: relative;
	min-height: $header-height;
	width: 100%;

	.header-settings {
		position: absolute;
		height: $header-height;
		top: 0;
		right: 0;
		z-index: 20;
	}
	.toggle-control, .settings-btn {
		@include button-colors(shade($brand-color, 1));
	}
	.header-toggle {
		@extend .row;
		height: $header-height;

		&:focus {
			opacity:0.9;
		}
		.toggle-control {
			@extend .full-height;
			@extend %border-box;
			cursor: pointer;
			position: relative;
			transition: all 0.5s;
			border-bottom-style: solid;
			border-bottom-width: $button-accent-size;
		}
		.settings-btn {
			@extend .btn.btn-expand;
			border-radius: 0;
		}
	}
	.hide-away-body {
		font-size: 0.8em;
	}
}

// signup/account
// --------------

.g-recaptcha > div {
	margin: 0 auto;
}

// notify
// ------

.notify-constrain-label {
	@include mq($from:tablet) {
		min-width: 4em;
		max-width: 8em;
	}
}

// main/contacts
// -------------

.menu-toggle {
	position: absolute;
	top: $header-height / 2;
	left: $contacts-h-space / 2;
	transform: translate(-50%, -50%);
	z-index: $details-z-index - 1;
}
.tag-title {
	@include v-center(left, $contacts-h-space);
	width: calc(100% - #{$padding * 7.2});
	@include mq($from: desktop) {
		left: $padding * 2;
		width: calc(100% - #{$padding * 6});
	}
}
.contacts-title {
	@include v-center(left, $contacts-h-space);
	width: calc(100% - #{$padding * 4});
	@include mq($from: desktop) {
		left: $padding;
	}
}
.contacts-control {
	cursor: pointer;
	position: absolute;
	top: 0;
	left: 0;
	width: $contacts-h-space;
	height: 100%;
	background-color: $bg-color;
	color: shade($bg-color);

	&.selected {
		$selected-color: tint($brand-color);
		background-color: $selected-color;
		color: shade($selected-color, 2);
	}
}
.contacts-info {
	cursor: pointer;
	margin-left: $contacts-h-space;
	padding: $padding;
	padding-right: 0;
}

// main/contacts/contact
// ---------------------

.contact-info {
	$contact-details-height: $badge-height + $badge-v-space * 3;

	overflow: hidden;

	.contact-summary {
		position: relative;
		width: 100%;
		height: 100%;
		transition: height 0.5s;

		.horizontal-items {
			@extend .pull-left;
		}
	}
	.contact-details {
		width: 100%;
		height: 0;
		opacity: 0;
		transition: opacity 0.5s, height 0.5s;

		.clear-badge .fa {
			margin-top: -3px;
		}
		.preview-badge {
			height: $badge-height;
		}
	}
	@include mq($until:desktop) { // displaying shared status
		&.is-shared {
			.contact-summary .horizontal-items {
				left: $padding / 2;
				top: 60%;
			}
			.contact-summary {
				height: calc(100% - #{$contact-details-height});
			}
			.contact-details {
				height: $contact-details-height;
				opacity: 1;
			}
		}
	}
	@include mq($from:desktop) { // displaying shared status and tags
		&.has-details {
			&:hover, &:active, &:focus {
				.contact-summary {
					height: calc(100% - #{$contact-details-height});
				}
				.contact-details {
					height: $contact-details-height;
					opacity: 1;
				}
			}
		}
	}
}
.section-body.readonly {
	.contact-record {
		height: 100%;
	}
	.contact-controls {
		display: none;
	}
}
@include split(height, ".contact-controls" ".contact-record", $control-height + $form-v-space * 2);
.contact-record {
	-webkit-tap-highlight-color: rgba(0,0,0,0);
	cursor: initial;

	&.no-future-messages {
		.record-body {
			height: 100%;
		}
		.future-messages {
			display: none;
		}
	}
	.record-receipts {
		@extend %vertical-scroll;
		max-height: 150px;
	}
	@include split(height, ".future-messages" ".record-body", $control-height);
	.record-body {
		@extend %no-results;
	}
	.future-messages {
		@extend %border-box;

		cursor: pointer;
	    position: relative;
	    text-align: center;
	    overflow: hidden;

	    border-top: 1px solid $border-color;
		transition: all 0.5s;
		background-color: shade($bg-color);

	    &:hover, &:active, &:focus {
			background-color: shade($bg-color, 1.5);
	    }
	}
}
.contact-controls {
	@extend .section-footer;
	padding: $form-v-space $padding;
	width: 100%;
	z-index: 10;

	&.floating {
		position: absolute;
		height: auto;
		bottom: 0;
		padding-right: 0.5 * $padding;
		padding-bottom: 0.3 * $padding;

		.btn, .send-text-field {
			display: inline-block;
			vertical-align: middle;
		}
		.send-text-field {
			width: calc(100% - #{$min-control-width} - #{$padding});
			margin-right: $padding * 0.5;
		}
		.btn {
			position: relative;
			top: -2px;
			width: $min-control-width;
		}
	}
}
// don't need the readonly qualifier on section body because the toggle
// to show these controls is not displayed in readonly view
.section-body .contact-record {
	$add-note-control-width: $record-item-triangle * 2.5;
	$add-note-control-height: 3 * $padding;

	.infinite-container:before, .infinite-items:before {
		z-index: $contents-z-index * 2;
	    position: absolute;
	    content: ' ';
	    height: calc(100% + #{$add-note-control-height / 2});
		background-color: shade($bg-color);

		width: 0;
		transition: width 0.8s; // leaving add note
	}
	.add-note {
		z-index: $contents-z-index * 3;
		position: relative;
		transition: background-color 0.25s, height 0.5s;
		float: left;
		width: 100%;
		margin-bottom: $record-item-space / 4;

		overflow: hidden; // important to avoid a phantom trigger
		height: 0; // important to avoid a phantom trigger
		opacity: 0;
		transition: opacity 0.2s, height 0.5s; // leaving add note

		&:hover, &:focus, &:active, &.adding {
			background: shade($bg-color, 1.5);

			.add-note-control {
				background-color: shade($bg-color, 2);
			}
		}
		.add-note-control {
			position: absolute;
			top: 50%;
			transform: translateY(-50%);

			transition: background-color 0.25s;
			height: $add-note-control-height;
			width: $add-note-control-width;

			&:hover, &:focus, &:active {
				background-color: shade($bg-color, 2);
			}
		}
	}

	&.adding-note {
		@extend .contact-record.no-future-messages;

		.cluster-item, .cluster-item:hover {
			.cluster-trigger {
				@extend .no-select;

				&:before {
		            border-top-color: $border-color;
		        }
		        .cluster-label {
		            color: $border-color;
		        }
			}
		}
		.add-note {
			overflow: visible; // so controls can re-appear
			height: 1px;
			opacity: 1;
			transition: opacity 2s, height 0.5s; // preparing to add note

			&.adding {
				height: 2 * $padding;
			}
		}
		.infinite-container:before, .infinite-items:before {
		    width: $add-note-control-width;
		    transition: width 0.5s; // preparing to add note
		}
		.note-item {
			margin-left: $add-note-control-width;
			width: calc(100% - #{$add-note-control-width});
		}
		.record-item.incoming {
			margin-left: calc(#{$add-note-control-width} + 1.5em);
		}
	}
}
.control-text {
    @extend .text-ellipsis;
    line-height: $control-height;
}

%control-base {
    background-color: $color-white;
    border: 1px solid $color-brand-light;
    border-radius: $border-radius;
    transition: border-color 0.2s, background-color 0.2s, color 0.2s;

    &:visited,
    &:hover,
    &:focus,
    &:active {
        border-color: $color-brand-dark;
        outline: 0;
    }
}
%control-disabled {
    opacity: 0.5;
    cursor: not-allowed;
    user-select: none;
}
%control-error {
    border-color: $color-error-light;
    color: $color-error-dark;

    &:visited,
    &:hover,
    &:focus,
    &:active {
        color: $color-error-dark;
        border-color: $color-error-dark;
        outline: 0;
    }
}
%input-disabled {
    &:disabled,
    &.disabled {
        outline: 0;
        background-color: $bg-lightest-color;
        color: $font-color;
        border-color: $border-color;
        opacity: 1; // mobile safari makes disabled items translucent

        &.btn {
            border-color: $border-color;
        }
    }
}
%input-decoration {
    @extend %input-disabled;
    box-sizing: border-box;
    box-shadow: none;
    border-radius: $border-radius;
    background-color: $bg-lightest-color;
    border: 1px solid $color-brand-light;
    // for removing top inset shadow on mobile browsers
    appearance: none;

    &:hover:not(.disabled),
    &:active:not(.disabled),
    &:focus:not(.disabled),
    &.focus:not(.disabled) {
        outline: 0;
        border-color: $color-brand-dark;
    }
    &.silent {
        border-color: transparent;
        &:hover {
            border-color: transparent;
        }
        &:active,
        &:focus,
        &.focus {
            outline: 0;
            border-color: transparent;
        }
    }
    &.form-error {
        @extend %control-error;
    }
    &.form-disabled,
    &:disabled {
        @extend %control-disabled;
    }
    &:disabled {
        @extend %control-disabled;
    }
}
.form-error,
.form-error %input-decoration {
    border-color: $color-error-light;

    color: tint($danger-color);
    border-color: tint($danger-color);

    &:hover {
        color: $danger-color;
        border-color: $danger-color;
    }
    &:active,
    &:focus {
        color: shade($danger-color);
        border-color: shade($danger-color);
    }
}
.form-disabled,
.form-disabled %input-decoration {
    color: shade($border-color, 2);
    border-color: $border-color;

    &:hover,
    &:active,
    &:focus {
        color: shade($border-color, 2);
        border-color: $border-color;
    }
}

// Buttons
// -------

.btn-link {
    height: auto;
    width: auto;
    min-width: auto;
    margin: 0;
    padding: 0;
    border-width: 0;
    background-color: transparent;
    text-transform: initial;
    text-decoration: underline;
}

.button {
    @extend .text-ellipsis;
    @extend %control-base;

    display: inline-block;
    line-height: $control-height;
    min-width: $control-height;
    padding: 0 $baseunit;
    color: $color-brand-dark;
    text-align: center;
    cursor: pointer;

    &:visited,
    &:hover,
    &:focus,
    &:active {
        background-color: $color-seafoam;
        color: $color-brand-dark;
    }

    &--expand {
        width: 100%;
        height: 100%;
    }

    &:disabled,
    &--disabled {
        @extend %control-disabled;
    }
    &:active,
    &--active {
        &,
        &:visited,
        &:hover,
        &:focus {
            background-color: $color-brand;
            color: $color-white;
            border-color: $color-brand;
        }
    }

    &--dark {
        border-color: rgba(255, 255, 255, 0.5);
    }

    &--error {
        @extend %control-error;

        &:visited,
        &:hover,
        &:focus,
        &:active {
            background-color: $color-error-lighter;
        }
        &:active,
        &.button--active {
            &,
            &:visited,
            &:hover,
            &:focus {
                background-color: $color-error;
                color: $color-white;
                border-color: $color-error;
            }
        }
    }
}

.btn {
    @extend %input-disabled;
    @include button-colors($bg-color);

    box-sizing: border-box;
    flex-shrink: 0;
    min-width: $min-control-width;
    padding: ($baseunit * 0.5) ($baseunit * 0.8);
    font-size: 1em;
    font-weight: $font-weight-bold;
    text-transform: uppercase;
    border-radius: $border-radius;
    height: $control-height;
    border-width: 1px;
    border-style: solid;
    transition: all 0.5s;
    border-bottom-width: $button-accent-size;
    border-bottom-style: solid;
    outline: none;

    &--keep-case {
        text-transform: initial;
    }

    &.btn-plain {
        @extend %input-disabled;
        border-color: transparent;
        background-color: transparent;
        color: inherit;

        &.btn-danger:not(:disabled) {
            color: $danger-color;
        }
        &.btn-success:not(:disabled) {
            color: $success-color;
        }
        &.btn-default:not(:disabled) {
            color: $brand-color;
        }
        &:disabled,
        &.disabled {
            background-color: $bg-light-color;
        }
    }
    &:not(.btn-plain):not(:disabled) {
        &.btn-success {
            @extend %input-disabled;
            @include button-colors($success-color);
        }
        &.btn-default {
            @extend %input-disabled;
            @include button-colors($brand-color);
        }
        &.btn-danger {
            @extend %input-disabled;
            @include button-colors($danger-color);
        }
    }
    &.btn-expand {
        @extend %input-disabled;
        width: 100%;
        height: 100%;
    }
    &.btn-span {
        @extend %input-disabled;
        width: 100%;
        border-radius: 0;
    }
    .horizontal-items {
        position: relative;
        top: -0.2em;
    }
}

// Checkbox/radio-button hack
// --------------------------

input[type='checkbox'],
input[type='radio'] {
    position: relative;
    transform: translateY(1px);
    margin-right: $baseunit;
    margin-left: 2px;

    &:before,
    &:checked:after {
        content: '';
        position: absolute;
        top: 50%;
        width: 100%;
        height: 100%;
        cursor: pointer;
        transform: translate(-1px, -50%);
    }

    &:before {
        border: 1px solid $color-brand-dark;
        border-radius: $border-radius;
        background-color: $bg-light-color;
    }

    &:checked:after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        background-color: $color-brand;
        height: $baseunit / 2;
        width: $baseunit / 2;
        transform: translate(-50%, -50%);
    }
}
input[type='radio'] {
    &:before,
    &:checked:after {
        border-radius: 100%;
    }
}

// Form
// ----

.form {
    padding-top: $baseunit;

    &__group {
        @extend %clearfix;

        margin: 0 $baseunit $baseunit;

        &--full-width {
            margin-left: 0;
            margin-right: 0;
        }
        &--no-vertical-space {
            margin-top: 0;
            margin-bottom: 0;
        }
    }
    &__item {
        &--constrain-width {
            margin-left: $baseunit;
            margin-right: $baseunit;
        }
    }
    &__label {
        @extend .text-ellipsis;
        @extend .text-small;

        display: block;
        font-weight: $font-weight-std;
        margin-bottom: $baseunit * 0.3;
        padding-left: $baseunit * 0.5;

        &--emphasize {
            font-weight: $font-weight-bold;
            font-size: 1em;
        }
        &--no-spacing {
            margin-bottom: 0;
            padding-left: 0;
        }
        &--multiline {
            @extend .text-wrap;

            white-space: normal;
        }
    }
    &__input {
        @extend %control-base;

        height: $control-height;
        width: 100%;
        padding: 0 ($baseunit * 0.5);
        color: $font-color;
        box-shadow: none;

        // removes inset shadow on mobile Safari
        // see https://stackoverflow.com/a/3078353
        &:not([type='checkbox']):not([type='radio']) {
            appearance: none;
        }

        &--multiline {
            height: auto;
            line-height: normal;
            resize: none;
            overflow: auto;
            padding: $baseunit * 0.5;
        }

        &:disabled,
        &--disabled {
            @extend %control-disabled;
        }
        &--error {
            @extend %control-error;
        }
    }
}

.form-element {
    margin-bottom: $form-v-space * 2;

    label {
        font-size: 1.1em;
        font-weight: $font-weight-bold;
        display: block;
        margin-bottom: 0.3em;
    }
}
.form-control {
    @extend %input-decoration;

    height: $control-height;
    width: 100%;
    padding: 0 $baseunit;
    transition: border-color 0.5s;

    &--only-bottom {
        border-width: 0 0 $button-accent-size 0;
    }
}
.form-control-minimal,
.form-control.form-control-minimal,
.form-control.form-control-minimal:disabled {
    color: $font-color;
    border: 1px solid $border-color;
    border-radius: $border-radius;
    cursor: pointer;
}
textarea.form-control {
    height: auto;
    line-height: normal;
    resize: none;
    overflow: auto;
    padding: ($baseunit * 0.5) $baseunit;
}
select.form-control {
    appearance: menulist;
}

// Input-group
// -----------

.input-group {
    display: table;
    width: 100%;

    @include mq($until: desktop) {
        input.form-control:not(:first-child) {
            padding: 0 (0.2 * $baseunit);
        }
    }
    .input-group {
        // all nested have auto width
        width: auto;

        &--full-width {
            width: 100%;
        }
    }
    & > .input-group-element .input-group {
        width: 100%;
    }
    & > :not(.input-group) {
        // first level children are table cells
        display: table-cell;
    }
    & > .input-group-element,
    & > .form-control {
        @extend %inline-item;
        vertical-align: middle;
    }
    & > .input-group-text {
        @extend %inline-item;
        line-height: $control-height - em(2px);
        padding: 0 ($baseunit * 0.7);
        border: 1px solid $border-color;
        border-radius: $border-radius;
    }
    & > .input-group-text-display {
        @extend %input-decoration;
        @extend %inline-item;
        font-weight: $font-weight-bold;
        width: 1%;

        &:first-child {
            padding-left: $baseunit / 2;
        }
        // changing font size induces scaling issues on mobile
        @include mq($from: desktop) {
            font-size: 1.5em;

            &:first-child {
                padding-left: $baseunit;
            }
        }
    }
    & > .input-group-addon {
        min-width: $min-control-width;
        width: 1%;
        white-space: nowrap;

        &.expand {
            width: auto;
        }
        &.blend-in .btn:not(:disabled) {
            @extend %input-decoration;
            color: $font-color;
            border-width: 0;

            &:hover {
                background-color: $bg-color;
            }
        }
        &:not(:first-child):not(:last-child) .btn {
            border-radius: 0;
            border-left-width: 0;
            border-right-width: 0;
        }
        &:first-child .btn {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
            border-right-width: 0;
        }
        &:last-child .btn {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            border-left-width: 0;
        }
    }
}
